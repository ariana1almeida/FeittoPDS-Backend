generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  firebaseUid String       @unique
  firstName   String
  lastName    String
  phone       String
  userType    UserType

  clientData      ClientData?
  providerData    ProviderData?
  createdServices Service[] @relation("ClientServices")

  @@map("Usuario")
}

model ClientData {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  street       String
  houseNumber  Int
  reference    String
  neighborhood String
  city         City
  state        State
  userId       String   @unique @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ProviderData {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  neighborhood String
  city       City
  state      State
  profession Profession
  userId     String     @unique @db.ObjectId
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Service {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  foto        String
  titulo      String
  descricao   String
  status      ServiceStatus @default(OPEN)
  categoria   Profession
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  clientId    String        @db.ObjectId
  client      User          @relation("ClientServices", fields: [clientId], references: [id], onDelete: Cascade)

  @@map("Servico")
}

enum UserType {
  CLIENT
  PROVIDER
}

enum City {
  CAPAO_DA_CANOA
  XANGRI_LA
  TRAMANDAI
  IMBE
  CURUMIM
}

enum State {
  RS
}

enum Profession {
  ELECTRICIAN
  PLUMBER
  CARPENTER
  PAINTER
  MASON
  OTHERS
}

enum ServiceStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
